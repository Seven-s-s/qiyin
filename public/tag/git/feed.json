{
    "version": "https://jsonfeed.org/version/1",
    "title": "七音 • All posts by \"git\" tag",
    "description": "路漫漫其修远兮，吾将上下而求索",
    "home_page_url": "https://qiyins.cn",
    "items": [
        {
            "id": "https://qiyins.cn/computer/course-2/git/",
            "url": "https://qiyins.cn/computer/course-2/git/",
            "title": "Git",
            "date_published": "2020-12-17T04:36:00.000Z",
            "content_html": "<h1 id=\"创建仓库\"><a class=\"anchor\" href=\"#创建仓库\">#</a> 创建仓库</h1>\n<h2 id=\"初始化仓库\"><a class=\"anchor\" href=\"#初始化仓库\">#</a> 初始化仓库</h2>\n<p>使用当前目录作为仓库，进行初始化</p>\n<blockquote>\n<p><strong>git init</strong></p>\n</blockquote>\n<p>执行完之后，当前目录会生成一个.git 目录</p>\n<h2 id=\"拷贝\"><a class=\"anchor\" href=\"#拷贝\">#</a> 拷贝</h2>\n<p>从 git 仓库拷贝项目</p>\n<blockquote>\n<p><strong>git clone &lt;repo&gt;</strong></p>\n</blockquote>\n<p>克隆到指定的目录</p>\n<blockquote>\n<p><strong>git clone &lt;repo&gt; &lt;directory&gt;</strong></p>\n</blockquote>\n<p><strong>repo：Git 仓库</strong></p>\n<p><strong>directory：本地目录</strong></p>\n<h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<blockquote>\n<p><strong>git config</strong></p>\n</blockquote>\n<h3 id=\"显示当前的-git-配置信息\"><a class=\"anchor\" href=\"#显示当前的-git-配置信息\">#</a> 显示当前的 git 配置信息</h3>\n<blockquote>\n<p><strong>git config --list</strong></p>\n<p><strong>credential.helper=osxkeychain</strong><br />\n<strong>core.repositoryformatversion=0</strong><br />\n<strong>core.filemode=true</strong><br />\n<strong>core.bare=false</strong><br />\n<strong>core.logallrefupdates=true</strong><br />\n<strong>core.ignorecase=true</strong><br />\n<strong>core.precomposeunicode=true</strong></p>\n</blockquote>\n<h3 id=\"编辑-git-配置文件\"><a class=\"anchor\" href=\"#编辑-git-配置文件\">#</a> 编辑 git 配置文件</h3>\n<blockquote>\n<p><strong>git config -e    # 针对当前仓库</strong></p>\n<p><strong>git config -e --global   # 针对系统上所有仓库</strong></p>\n</blockquote>\n<h3 id=\"设置提交代码时的用户信息\"><a class=\"anchor\" href=\"#设置提交代码时的用户信息\">#</a> 设置提交代码时的用户信息</h3>\n<blockquote>\n<p><strong>git config --global <span class=\"exturl\" data-url=\"aHR0cDovL3VzZXIubmFtZQ==\">user.name</span> &quot;用户名&quot;</strong><br />\n<strong>git config --global user.email  邮箱</strong></p>\n</blockquote>\n<p><strong>如果去掉 --global 参数只对当前仓库有效</strong></p>\n<h1 id=\"基本指令\"><a class=\"anchor\" href=\"#基本指令\">#</a> 基本指令</h1>\n<h2 id=\"添加文件\"><a class=\"anchor\" href=\"#添加文件\">#</a> 添加文件</h2>\n<h3 id=\"添加一个或多个文件到暂存区\"><a class=\"anchor\" href=\"#添加一个或多个文件到暂存区\">#</a> 添加一个或多个文件到暂存区</h3>\n<blockquote>\n<p><strong>git add [file1] [file2] ...</strong></p>\n</blockquote>\n<h3 id=\"添加指定目录到暂存区包括子目录\"><a class=\"anchor\" href=\"#添加指定目录到暂存区包括子目录\">#</a> 添加指定目录到暂存区，包括子目录</h3>\n<blockquote>\n<p><strong>git add [dir]</strong></p>\n</blockquote>\n<h3 id=\"添加当前目录下的所有文件到暂存区\"><a class=\"anchor\" href=\"#添加当前目录下的所有文件到暂存区\">#</a> 添加当前目录下的所有文件到暂存区</h3>\n<blockquote>\n<p>**git add ***</p>\n</blockquote>\n<h2 id=\"查看添加文件状态\"><a class=\"anchor\" href=\"#查看添加文件状态\">#</a> 查看添加文件状态</h2>\n<p><strong>查看在你上次提交之后是否有对文件进行再次修改。</strong></p>\n<blockquote>\n<p><strong>git status</strong></p>\n</blockquote>\n<p><strong>通常使用 -s 参数来获得简短的输出结果</strong></p>\n<blockquote>\n<p><strong>git status -s</strong></p>\n</blockquote>\n<h2 id=\"提交文件\"><a class=\"anchor\" href=\"#提交文件\">#</a> 提交文件</h2>\n<h3 id=\"提交暂存区到本地仓库中\"><a class=\"anchor\" href=\"#提交暂存区到本地仓库中\">#</a> 提交暂存区到本地仓库中</h3>\n<blockquote>\n<p><strong>git commit -m &quot;提交信息&quot;</strong></p>\n</blockquote>\n<h3 id=\"提交暂存区的指定文件到仓库区\"><a class=\"anchor\" href=\"#提交暂存区的指定文件到仓库区\">#</a> 提交暂存区的指定文件到仓库区</h3>\n<blockquote>\n<p><strong>git commit [file1] [file2] ... -m &quot;提交信息&quot;</strong></p>\n</blockquote>\n<h2 id=\"删除文件\"><a class=\"anchor\" href=\"#删除文件\">#</a> 删除文件</h2>\n<h3 id=\"将文件从暂存区和工作区中删除\"><a class=\"anchor\" href=\"#将文件从暂存区和工作区中删除\">#</a> 将文件从暂存区和工作区中删除</h3>\n<blockquote>\n<p><strong>git rm &lt;file&gt;</strong></p>\n</blockquote>\n<h3 id=\"强制删除\"><a class=\"anchor\" href=\"#强制删除\">#</a> 强制删除</h3>\n<p><strong>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f，强行从暂存区和工作区中删除修改后的文件</strong></p>\n<blockquote>\n<p><strong>git rm -f &lt;file&gt;</strong></p>\n</blockquote>\n<p><strong>如果想把文件从暂存区域移除，但仍然希望保留在当前工作目录，换句话说，仅是从跟踪清单中删除</strong></p>\n<blockquote>\n<p><strong>git rm --cached &lt;file&gt;</strong></p>\n</blockquote>\n<h3 id=\"递归删除\"><a class=\"anchor\" href=\"#递归删除\">#</a> 递归删除</h3>\n<p><strong>如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件</strong></p>\n<blockquote>\n<p>**git rm -r ***</p>\n</blockquote>\n<h2 id=\"移动文件\"><a class=\"anchor\" href=\"#移动文件\">#</a> 移动文件</h2>\n<p>用于移动或重命名一个文件、目录或软连接。</p>\n<blockquote>\n<p><strong>git mv [file] [newfile]</strong></p>\n</blockquote>\n<p>如果新但文件名已经存在，但还是要重命名它</p>\n<blockquote>\n<p><strong>git mv -f [file] [newfile]</strong></p>\n</blockquote>\n<h2 id=\"远程操作\"><a class=\"anchor\" href=\"#远程操作\">#</a> 远程操作</h2>\n<h3 id=\"下载远程代码并合并\"><a class=\"anchor\" href=\"#下载远程代码并合并\">#</a> 下载远程代码并合并</h3>\n<blockquote>\n<p><strong>git pull</strong></p>\n</blockquote>\n<h3 id=\"上传远程代码并合并\"><a class=\"anchor\" href=\"#上传远程代码并合并\">#</a> 上传远程代码并合并</h3>\n<blockquote>\n<p><strong>git push</strong></p>\n</blockquote>\n<h2 id=\"解决冲突\"><a class=\"anchor\" href=\"#解决冲突\">#</a> 解决冲突</h2>\n<blockquote>\n<p><strong>shift+!\t输入:wq 保存</strong></p>\n</blockquote>\n<h1 id=\"配置密钥\"><a class=\"anchor\" href=\"#配置密钥\">#</a> 配置密钥</h1>\n<h2 id=\"创建新的ssh-key\"><a class=\"anchor\" href=\"#创建新的ssh-key\">#</a> 创建新的 ssh key</h2>\n<blockquote>\n<p>输入 ssh-keygen -t rsa -C &quot;<span class=\"exturl\" data-url=\"bWFpbHRvOnlvdXJlbWFpbEB5b3VyZW1haWwuY29t\">youremail@youremail.com</span>&quot;</p>\n<p>执行这条命令会如上图提示文件保存路径，可以直接按 Enter，</p>\n<p>然后提示输入 passphrase（密码），输入两次（可以不输直接两次 Enter），</p>\n<p>然后会在 .ssh 目录生产两个文件：id_rsa 和 id_rsa.pub</p>\n<p>用记事本打开.ssh 目录下的 id_rsa.pub 文件，复制里面的内容，或者直接执行命令查看</p>\n</blockquote>\n<h2 id=\"查看密钥\"><a class=\"anchor\" href=\"#查看密钥\">#</a> 查看密钥</h2>\n<blockquote>\n<p>$ cat ~/.ssh/id_rsa.pub</p>\n</blockquote>\n<p>或者之间点开文件查看</p>\n<h2 id=\"复制ssh-key到github\"><a class=\"anchor\" href=\"#复制ssh-key到github\">#</a> 复制 ssh key 到 github</h2>\n<blockquote>\n<p>On the GitHub site Click “Settings”</p>\n<p>Click “SSH and GPG Keys”</p>\n<p>Click “New SSH key”</p>\n</blockquote>\n<h2 id=\"测试-ssh-链接-github\"><a class=\"anchor\" href=\"#测试-ssh-链接-github\">#</a> 测试 ssh 链接 github</h2>\n<blockquote>\n<p>输入 ssh -T <span class=\"exturl\" data-url=\"bWFpbHRvOmdpdEBnaXRodWIuY29t\">git@github.com</span></p>\n<p>出现 Successfully 就表示可以了</p>\n</blockquote>\n",
            "tags": [
                "git"
            ]
        }
    ]
}