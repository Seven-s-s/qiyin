{
    "version": "https://jsonfeed.org/version/1",
    "title": "七音 • All posts by \"mongodb\" tag",
    "description": "路漫漫其修远兮，吾将上下而求索",
    "home_page_url": "https://qiyins.cn",
    "items": [
        {
            "id": "https://qiyins.cn/computer/course-1/MongoDB/",
            "url": "https://qiyins.cn/computer/course-1/MongoDB/",
            "title": "MongoDB",
            "date_published": "2020-12-22T16:00:00.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<ul>\n<li>Mongodb 文档数据库，存储的是文档 (Bson&gt;json 的二进制化)</li>\n</ul>\n<blockquote>\n<p>特点：内部执行引擎为 JS 解释器，把文档存储成 bson 结构，在查询时，转化为就、JS 对象，并可以通过熟悉的 JS 语法来操作</p>\n</blockquote>\n<ul>\n<li>Mongodb 和传统数据库相比最大的不同</li>\n</ul>\n<blockquote>\n<p>传统型数据库：结构化数据，定好了表结构后，每一行的内容必是符合表结构的，就是说 - 列的个数，类型都一样</p>\n<p>Mongodb 文档型数据库：表下的每篇文档都可以有自己独特的结构 (json 对象都可以有自己独特的属性和值)</p>\n</blockquote>\n<ul>\n<li>下载地址</li>\n</ul>\n<blockquote>\n<p><a href=\"https://www.mongodb.com/download-center/community\"><strong>https://www.mongodb.com/download-center/community</strong></a></p>\n</blockquote>\n<h1 id=\"linux安装mongodb\"><a class=\"anchor\" href=\"#linux安装mongodb\">#</a> Linux 安装 mongodb</h1>\n<ol>\n<li>下载</li>\n</ol>\n<blockquote>\n<p>wget  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYXN0ZGwubW9uZ29kYi5vcmcvbGludXgvbW9uZ29kYi1saW51eC14ODZfNjQtcmhlbDgwLTQuNC4xLnRneg==\">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel80-4.4.1.tgz</span></p>\n</blockquote>\n<ol start=\"2\">\n<li>解压</li>\n</ol>\n<blockquote>\n<p>tar -zxvf mongodb-linux-x86_64-rhel80-4.4.1.tgz</p>\n</blockquote>\n<ol start=\"3\">\n<li>将解压包拷贝至指定目录</li>\n</ol>\n<blockquote>\n<p>mv mongodb-linux-x86_64-rhel80-4.4.1 /usr/local/mongodb</p>\n</blockquote>\n<ol start=\"4\">\n<li>创建数据存放目录与日志存放目录</li>\n</ol>\n<blockquote>\n<p>mkdir -p /usr/local/mongodb/data /usr/local/mongodb/logs</p>\n</blockquote>\n<ol start=\"5\">\n<li>启动 mongodb 服务</li>\n</ol>\n<blockquote>\n<p>/usr/local/mongodb/bin/mongod –dbpath=/usr/local/mongodb/data –logpath=/usr/local/mongodb/logs/mongodb.log –logappend –port=27017 --fork</p>\n</blockquote>\n<ol start=\"6\">\n<li>登录</li>\n</ol>\n<blockquote>\n<p>/usr/local/mongodb/bin/mongo</p>\n</blockquote>\n<h1 id=\"基本操作\"><a class=\"anchor\" href=\"#基本操作\">#</a> 基本操作</h1>\n<h2 id=\"通用操作\"><a class=\"anchor\" href=\"#通用操作\">#</a> 通用操作</h2>\n<ol>\n<li>查看数据库</li>\n</ol>\n<blockquote>\n<p>Show databases</p>\n</blockquote>\n<ol start=\"2\">\n<li>选择数据库</li>\n</ol>\n<blockquote>\n<p>Use 数据库名</p>\n<p>隐式创建：在 mongodb 选择不存在的数据库不会报错，后期当该数据库有数据时，系统会自动创建</p>\n</blockquote>\n<ol start=\"3\">\n<li>查看集合</li>\n</ol>\n<blockquote>\n<p>Show collections</p>\n</blockquote>\n<ol start=\"4\">\n<li>创建集合</li>\n</ol>\n<blockquote>\n<p>db.createCollection (‘集合名’)</p>\n</blockquote>\n<ol start=\"5\">\n<li>删除集合</li>\n</ol>\n<blockquote>\n<p>db. 集合名.drop ()</p>\n</blockquote>\n<h2 id=\"c增\"><a class=\"anchor\" href=\"#c增\">#</a> C 增</h2>\n<blockquote>\n<p>db. 集合名.insert (JSON 数据)</p>\n<p>集合存在 - 则直接插入数据，集合不存在 - 隐式创建，创建时会有默认 id，如需自定义，给插入的 JSON 数据增加_id 键即可覆盖</p>\n</blockquote>\n<p>增加多条数据</p>\n<blockquote>\n<p>(JSON 数据) 变为 ([JSON 数据，JSON 数据]）</p>\n</blockquote>\n<p>快速插入多条数据</p>\n<blockquote>\n<p>由于 mongodb 底层是 JS 引擎，所以支持部分 JS 语法</p>\n<p>for(var i = 1; i &lt; n; i++){</p>\n<p>​\tdb. 集合名.insert ({name:&quot;a&quot;+i,age:i})</p>\n<p>}</p>\n</blockquote>\n<h2 id=\"r查\"><a class=\"anchor\" href=\"#r查\">#</a> R 查</h2>\n<ol>\n<li>查询全部数据</li>\n</ol>\n<blockquote>\n<p>Db. 集合名.find ()</p>\n</blockquote>\n<ol start=\"2\">\n<li>只看 name 列</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ({},{name:1})</p>\n</blockquote>\n<ol start=\"3\">\n<li>除了 name 列</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ({},{name:0})</p>\n<p>第一个 {} 不填表示查询所有</p>\n</blockquote>\n<ol start=\"4\">\n<li>查询固定数据</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ({name:&quot;张三&quot;})</p>\n</blockquote>\n<ol start=\"5\">\n<li>查询年龄大于 5 岁的数据</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ({age:{$gt:5}})</p>\n</blockquote>\n<ol start=\"6\">\n<li>查询 5,8,10 岁的数据</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ({age:{$in:[5,8,10]}})</p>\n</blockquote>\n<ol start=\"7\">\n<li>运算符</li>\n</ol>\n<blockquote>\n<p>$gt：大于</p>\n<p>$gte：大于等于</p>\n<p>$lt：小于</p>\n<p>$lte：小于等于</p>\n<p>$ne：不等于</p>\n<p>$in：in</p>\n<p>$nin：not in</p>\n</blockquote>\n<h2 id=\"u改\"><a class=\"anchor\" href=\"#u改\">#</a> U 改</h2>\n<blockquote>\n<p>Db. 集合名.update (条件，新数据，[是否新增，是否修改多条])</p>\n</blockquote>\n<ul>\n<li>是否新增</li>\n</ul>\n<blockquote>\n<p>指条件匹配不到数据则插入 (true 是插入，false 否不插入默认)</p>\n</blockquote>\n<ul>\n<li>是否修改多条</li>\n</ul>\n<blockquote>\n<p>指将匹配成功的数据都修改 (true 是，false 否默认)</p>\n</blockquote>\n<ul>\n<li>修改张三的数据</li>\n</ul>\n<blockquote>\n<p>db. 集合名.update ({name:&quot;zs1&quot;},{$set:{name:&quot;zs2&quot;}})，不加 set 默认是替换而不是修改</p>\n</blockquote>\n<ul>\n<li>将张三的年龄加 1</li>\n</ul>\n<blockquote>\n<p>db. 集合名.update ({name:&quot;zs1&quot;},{$inc:{age:1}})</p>\n</blockquote>\n<ul>\n<li>修改器</li>\n</ul>\n<blockquote>\n<p>$set：修改列值</p>\n<p>$inc：递增</p>\n<p>$rename：重命名列</p>\n<p>$unset：删除列</p>\n</blockquote>\n<h2 id=\"d删\"><a class=\"anchor\" href=\"#d删\">#</a> D 删</h2>\n<blockquote>\n<p>db. 集合名.remove ({},[是否删除一条])</p>\n<p>ture：删除一条，默认 false：全删除</p>\n</blockquote>\n<h1 id=\"拓展操作\"><a class=\"anchor\" href=\"#拓展操作\">#</a> 拓展操作</h1>\n<ol>\n<li>格式化数据 pretty ()</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ().pretty ()</p>\n</blockquote>\n<ol start=\"2\">\n<li>排序</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ().sort (JSON 数据)</p>\n<p>键 - 就是要排序的字段的列 / 字段、值：1 升序   -1 降序</p>\n</blockquote>\n<ol start=\"3\">\n<li>分页</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ().skip (数字).limit (数字)</p>\n<p>skip 跳过指定条数 (可选)，limit 限制查询的条数</p>\n</blockquote>\n<ol start=\"4\">\n<li>总结</li>\n</ol>\n<blockquote>\n<p>db. 集合名.find ()</p>\n<p>.pretty () 格式化数据</p>\n<p>.sort ({列：1/-1}) 排序</p>\n<p>.skip (数字) 跳过指定条数</p>\n<p>.limit (数字) 限制查询条数</p>\n<p>.count () 统计总条数</p>\n</blockquote>\n<h1 id=\"聚合查询\"><a class=\"anchor\" href=\"#聚合查询\">#</a> 聚合查询</h1>\n<pre><code>Db.集合名.aggregate([\n    &#123;管道：&#123;表达式&#125;&#125;\n    ……\n])\n</code></pre>\n<h2 id=\"常用管道\"><a class=\"anchor\" href=\"#常用管道\">#</a> 常用管道：</h2>\n<ul>\n<li>$group</li>\n</ul>\n<blockquote>\n<p>将集合中的文档进行分组，用于统计结果</p>\n</blockquote>\n<ul>\n<li>$match</li>\n</ul>\n<blockquote>\n<p>过滤数据，只要输出符合条件的文档</p>\n</blockquote>\n<ul>\n<li>$sort</li>\n</ul>\n<blockquote>\n<p>聚合数据进一步排序</p>\n</blockquote>\n<ul>\n<li>$skip</li>\n</ul>\n<blockquote>\n<p>跳过指定文档数</p>\n</blockquote>\n<ul>\n<li>$limit</li>\n</ul>\n<blockquote>\n<p>限制集合数据返回文档数</p>\n</blockquote>\n<h2 id=\"常用表达式\"><a class=\"anchor\" href=\"#常用表达式\">#</a> 常用表达式</h2>\n<ul>\n<li>$sum</li>\n</ul>\n<blockquote>\n<p>总和  $sum：1 同 count 表示统计</p>\n</blockquote>\n<ul>\n<li>$avg</li>\n</ul>\n<blockquote>\n<p>平均</p>\n</blockquote>\n<ul>\n<li>$min</li>\n</ul>\n<blockquote>\n<p>最小值</p>\n</blockquote>\n<ul>\n<li>$max</li>\n</ul>\n<blockquote>\n<p>最大值</p>\n</blockquote>\n<h2 id=\"例子\"><a class=\"anchor\" href=\"#例子\">#</a> 例子</h2>\n<ol>\n<li>统计男生女生的总年龄：</li>\n</ol>\n<pre><code>db.集合名.aggregate([\n    &#123;\n        $group:&#123;\n            _id:&quot;$sex&quot;.\n            result:&#123;$sum:&quot;$age&quot;&#125;\n    \t&#125;\n    &#125;\n])\n</code></pre>\n<ol start=\"2\">\n<li>统计男生女生的总人数</li>\n</ol>\n<pre><code>db.集合名.aggregate([\n    &#123;\n        $group:&#123;\n            _id:&quot;$sex&quot;,\n            num:&#123;$sum:1&#125;\n        &#125;\n    &#125;\n])\n</code></pre>\n<ol start=\"3\">\n<li>求学生总数和平均年龄</li>\n</ol>\n<pre><code>db.集合名.aggregate([\n    &#123;\n        $group:&#123;\n            _id:null,\n            Total_num:&#123;$sum:1&#125;,\n            Avg_age:&#123;$avg:&quot;age&quot;&#125;\n        &#125;\n    &#125;\n])\n</code></pre>\n<ol start=\"3\">\n<li>查询男生女生人数，按人数排序</li>\n</ol>\n<pre><code>db.集合名.aggregate([\n    &#123;\n        $group:&#123;\n            _id:&quot;$sex&quot;,\n            num:&#123;$sum:1&#125;\n        &#125;\n    &#125;,\n    &#123;\n        $sort:&#123;\n            num:1//升序\n        &#125;\n    &#125;\n])\n</code></pre>\n<h1 id=\"索引\"><a class=\"anchor\" href=\"#索引\">#</a> 索引</h1>\n<h2 id=\"创建索引\"><a class=\"anchor\" href=\"#创建索引\">#</a> 创建索引</h2>\n<blockquote>\n<p>Db. 集合名.createIndex (待创建索引的列，[额外选项])</p>\n<p 键：1，…，键：-1=\"\">待创建索引的列：</p>\n<p>说明：1 升序 - 1 降序      例：{age：1} 表示创建 age 索引并按照升序的方式存储</p>\n<p>额外选项：设置索引的名称或唯一索引</p>\n</blockquote>\n<h2 id=\"删除索引\"><a class=\"anchor\" href=\"#删除索引\">#</a> 删除索引</h2>\n<ul>\n<li>全部删除</li>\n</ul>\n<blockquote>\n<p>db. 集合名.dropIndexes ()</p>\n</blockquote>\n<ul>\n<li>删除指定</li>\n</ul>\n<blockquote>\n<p>db. 集合名.dropIndex (索引名)</p>\n</blockquote>\n<h2 id=\"查看索引\"><a class=\"anchor\" href=\"#查看索引\">#</a> 查看索引</h2>\n<blockquote>\n<p>Db. 集合名.getIndexes ()</p>\n<p>显示出来的 key：给哪个列设置了索引</p>\n<p>显示出来的 name：表示索引名称，默认系统生成，也可以自定义</p>\n</blockquote>\n<h2 id=\"给索引取名\"><a class=\"anchor\" href=\"#给索引取名\">#</a> 给索引取名</h2>\n<blockquote>\n<p>Db. 集合名.createIndex ({“键 &quot;：“值&quot;}，{键：“名称 &quot;})</p>\n</blockquote>\n<h2 id=\"添加唯一索引\"><a class=\"anchor\" href=\"#添加唯一索引\">#</a> 添加唯一索引</h2>\n<blockquote>\n<p>Db. 集合名.createIndex ({“键 &quot;：“值&quot;}，{unique：“键 &quot;})</p>\n</blockquote>\n<h2 id=\"分析索引\"><a class=\"anchor\" href=\"#分析索引\">#</a> 分析索引</h2>\n<blockquote>\n<p>Db. 集合名.find ().explain (“executionStats&quot;)</p>\n</blockquote>\n<h1 id=\"权限机制\"><a class=\"anchor\" href=\"#权限机制\">#</a> 权限机制</h1>\n<h2 id=\"创建账号\"><a class=\"anchor\" href=\"#创建账号\">#</a> 创建账号</h2>\n<pre><code>Use admin\ndb.createUser(&#123;\n &quot;user&quot;:&quot;admin&quot;,\n &quot;pwd&quot;:&quot;admin&quot;,\n &quot;roles&quot;:[&#123;\n     role:&quot;root&quot;,\n     db:&quot;admin&quot;\n &#125;]\n&#125;) \n\n</code></pre>\n<h2 id=\"角色\"><a class=\"anchor\" href=\"#角色\">#</a> 角色</h2>\n<ul>\n<li>角色种类</li>\n</ul>\n<blockquote>\n<p>超级用户角色：root</p>\n<p>数据库用户角色：read、readwrite；</p>\n<p>数据库管理角色：dbAdmin、userAdmin；</p>\n<p>集群管理角色：clusterAdmin、clusterManager、ClusterMonitor、hostManager；</p>\n<p>备份恢复角色：backup、restore；</p>\n<p>所有数据库角色：readAnyDatabase、readWriterAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase；</p>\n</blockquote>\n<ul>\n<li>角色说明</li>\n</ul>\n<blockquote>\n<p>root：只在 admin 数据库中可用。超级账号、超级权限；</p>\n<p>read：允许用户读取指定数据库；</p>\n<p>readWriter：允许用户读写指定数据库</p>\n</blockquote>\n<h2 id=\"开启验证模式\"><a class=\"anchor\" href=\"#开启验证模式\">#</a> 开启验证模式</h2>\n<h3 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h3>\n<blockquote>\n<p>指用户需要输入账号密码才能登录使用</p>\n</blockquote>\n<h3 id=\"操作步骤\"><a class=\"anchor\" href=\"#操作步骤\">#</a> 操作步骤</h3>\n<ol>\n<li>添加超级管理员</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Use</span> admin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>db<span class=\"token punctuation\">.</span>createUser<span class=\"token punctuation\">(</span>&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"user\"</span>:<span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"pwd\"</span>:<span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"roles\"</span>:<span class=\"token punctuation\">[</span>&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        role:<span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        db:<span class=\"token string\">\"admin\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &#125;<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>退出卸载服务</li>\n</ol>\n<blockquote>\n<p>Linux：mongod --shutdown</p>\n<p>Window：Mongod --remove</p>\n</blockquote>\n<ol start=\"3\">\n<li>重新安装需要输入账号密码的服务 (注：在原安装命令基础上加上 —auth 即可)</li>\n</ol>\n<blockquote>\n<p>Linux：bin 目录下</p>\n<p>./mongod --dbpath=/usr/local/mongodb/data --logpath= /usr/local/mongodb/logs/mongodb.log --auth --logappend --port=27017 –fork</p>\n<p>Window：bin 目录下</p>\n<p>mongod --install --dbpath (data 路径) --logpath (log 路径) –auth</p>\n</blockquote>\n<ol start=\"4\">\n<li>启动服务 -&gt; 登录测试</li>\n</ol>\n<blockquote>\n<p>Linux：bin 目录下./mongo</p>\n<p>Windows：net start mongodb 再输入 mongo 启动</p>\n<p>直接启动 show dbs 看不到任何东西</p>\n<p>方法 1：mongo 服务 ip 地址：端口号 / 数据库 -u 用户名 -p 密码</p>\n<p>方法 2：先登录，选择数据库，输入 db.auth (用户名，密码)</p>\n</blockquote>\n<h3 id=\"例子-2\"><a class=\"anchor\" href=\"#例子-2\">#</a> 例子</h3>\n<blockquote>\n<p>添加用户 shop1 可以读 shop 数据库</p>\n<p>添加用户 shop2 可以读写 shop 数据库</p>\n<p>注意：必须在对应数据库创建用户</p>\n</blockquote>\n<ol>\n<li>准备测试数据</li>\n</ol>\n<pre><code>use shop\nfor(var i = 1 ;i &lt;= 10;i++)&#123;\n\tdb.goods.insert(&#123;\n        &quot;name&quot;:&quot;goodsName&quot;+i,\n        &quot;price&quot;:i\n\t&#125;)\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>查看添加的数据</li>\n</ol>\n<blockquote>\n<p>db.goods.find()</p>\n</blockquote>\n<ol start=\"3\">\n<li>添加用户并设置权限</li>\n</ol>\n<pre><code>use shop\ndb.createUser(&#123;\n    &quot;user&quot;:&quot;shop1&quot;,\n    &quot;pwd&quot;:&quot;shop1&quot;,\n    &quot;roles&quot;:[&#123;\n    \trole:&quot;read&quot;,\n    \tdb:&quot;shop&quot;\n    &#125;]\n&#125;)\ndb.createUser(&#123;\n    &quot;user&quot;:&quot;shop2&quot;,\n    &quot;pwd&quot;:&quot;shop2&quot;,\n    &quot;roles&quot;:[&#123;\n    \trole:&quot;readWrite&quot;,\n    \tdb:&quot;shop&quot;\n    &#125;]\n&#125;)\n</code></pre>\n<ol start=\"4\">\n<li>查看添加的用户</li>\n</ol>\n<blockquote>\n<p>use admin</p>\n<p>db.system.users.find().pretty()</p>\n</blockquote>\n<ol start=\"5\">\n<li>登入 shop1 账号</li>\n</ol>\n<blockquote>\n<p>mongo localhost:27017/shop -u shop1 -p shop1</p>\n</blockquote>\n<ol start=\"6\">\n<li>查看数据</li>\n</ol>\n<blockquote>\n<p>db.goods.find()</p>\n</blockquote>\n<ol start=\"7\">\n<li>尝试插入数据（会报错就对了）</li>\n</ol>\n<pre><code>db.goods.insert(&#123;\n\t&quot;name&quot;:&quot;goodsName11&quot;,\n\t&quot;price&quot;:11\n&#125;)\n</code></pre>\n<ol start=\"8\">\n<li>登入 shop2 账号</li>\n</ol>\n<blockquote>\n<p>mongo localhost:27017/shop -u shop2 -p shop2</p>\n</blockquote>\n<ol start=\"9\">\n<li>查看数据</li>\n</ol>\n<blockquote>\n<p>db.goods.find()</p>\n</blockquote>\n<ol start=\"10\">\n<li>尝试插入数据（插入成功）</li>\n</ol>\n<pre><code>db.goods.insert(&#123;\n\t&quot;name&quot;:&quot;goodsName11&quot;,\n\t&quot;price&quot;:11\n&#125;)\n</code></pre>\n<h1 id=\"备份还原\"><a class=\"anchor\" href=\"#备份还原\">#</a> 备份还原</h1>\n<blockquote>\n<p>备份与还原都在 bin 目录下执行命令</p>\n</blockquote>\n<h2 id=\"备份语法\"><a class=\"anchor\" href=\"#备份语法\">#</a> 备份语法</h2>\n<blockquote>\n<p>mongodump -h -port -u -p -d -o</p>\n<p>-h：host 服务器 IP 地址 (一般不写，默认本机)</p>\n<p>-port：   端口 (一般不写，默认 27017)</p>\n<p>-u：user  账号</p>\n<p>-p：pwd  密码</p>\n<p>-d：databse 数据库 (数据库不写则导出全部)</p>\n<p>-o：open 备份到指定目录下</p>\n</blockquote>\n<h2 id=\"例子-3\"><a class=\"anchor\" href=\"#例子-3\">#</a> 例子</h2>\n<ul>\n<li>备份所有数据</li>\n</ul>\n<blockquote>\n<p>mongodump -u admin -p admin -o 备份目录</p>\n</blockquote>\n<ul>\n<li>备份指定数据</li>\n</ul>\n<blockquote>\n<p>mongodump -u shop1 -p shop1 -d shop -o 备份目录</p>\n</blockquote>\n<h2 id=\"还原语法\"><a class=\"anchor\" href=\"#还原语法\">#</a> 还原语法</h2>\n<blockquote>\n<p>mongorestore -h -port -u -p -d --drop 备份数据目录</p>\n<p>-d 不写则还原全部数据</p>\n<p>--drop 先删除数据库再导入</p>\n</blockquote>\n<h2 id=\"例子-4\"><a class=\"anchor\" href=\"#例子-4\">#</a> 例子</h2>\n<ul>\n<li>还原所有数据</li>\n</ul>\n<blockquote>\n<p>先删除两个数据库</p>\n<p>use test1，db.dropDatabse()，use test2()，db.dropDatabase()</p>\n<p>查看剩下的数据库 show dbs</p>\n<p>还原数据 mongorestore -u admin -p admin --drop</p>\n<p>备份数据目录，重新登录查看效果</p>\n</blockquote>\n<ul>\n<li>还原指定数据</li>\n</ul>\n<blockquote>\n<p>mongorestore -u shop2 -p shop2 -d shop –drop 备份目录</p>\n</blockquote>\n<h1 id=\"java连接mongodb\"><a class=\"anchor\" href=\"#java连接mongodb\">#</a> Java 连接 mongodb</h1>\n<ol>\n<li>查看 mongodb 占用的端口</li>\n</ol>\n<blockquote>\n<p>ps -ef | grep mongodb</p>\n</blockquote>\n<ol start=\"2\">\n<li>关掉 mongodb</li>\n</ol>\n<blockquote>\n<p>kill -9 端口</p>\n</blockquote>\n<ol start=\"3\">\n<li>开启 mongodb 服务</li>\n</ol>\n<blockquote>\n<p>传教 mongo-start.sh 文件并编辑</p>\n<p>./mongod --dbpath=/usr/local/mongodb/data --logpath= /usr/local/mongodb/logs/mongodb.log --auth --logappend --port=27017 --bind_ip=0.0.0.0 (设置为所有人可访问) --fork</p>\n<p>将该文件设置为可执行文件，chmod +x <span class=\"exturl\" data-url=\"aHR0cDovL21vbmdvLXN0YXJ0LnNo\">mongo-start.sh</span></p>\n<p>执行./mongo-start 开启服务</p>\n</blockquote>\n<ol start=\"4\">\n<li>在 java 端连接测试</li>\n</ol>\n<ul>\n<li>导入 pom 依赖</li>\n</ul>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mongodb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mongodb-driver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.8.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>未设置账号密码</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">MongoClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MongoClient</span><span class=\"token punctuation\">(</span>IP地址<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 获取操作的数据库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">MongoDatabase</span> test1 <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getDatabase</span><span class=\"token punctuation\">(</span>数据库名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 获取集合</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">MongoCollection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span></span> collection <span class=\"token operator\">=</span> test1<span class=\"token punctuation\">.</span><span class=\"token function\">getCollection</span><span class=\"token punctuation\">(</span>集合名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 获取文档的内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">FindIterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span></span> documents <span class=\"token operator\">=</span> collection<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Document</span> document <span class=\"token operator\">:</span> documents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>设置账号密码</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 设置服务器地址和端口号</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ServerAddress</span> serverAddress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerAddress</span><span class=\"token punctuation\">(</span>IP地址<span class=\"token punctuation\">,</span> 端口号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 设置用户名、数据库名称、密码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">MongoCredential</span> credential <span class=\"token operator\">=</span> <span class=\"token class-name\">MongoCredential</span><span class=\"token punctuation\">.</span><span class=\"token function\">createCredential</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 通过连接认证获取连接</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">MongoClientOptions</span> build <span class=\"token operator\">=</span> <span class=\"token class-name\">MongoClientOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">MongoClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MongoClient</span><span class=\"token punctuation\">(</span>serverAddress<span class=\"token punctuation\">,</span> credential<span class=\"token punctuation\">,</span> build<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 获取操作的数据库</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">MongoDatabase</span> test1 <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getDatabase</span><span class=\"token punctuation\">(</span>数据库名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 获取集合</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">MongoCollection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span></span> collection <span class=\"token operator\">=</span> test1<span class=\"token punctuation\">.</span><span class=\"token function\">getCollection</span><span class=\"token punctuation\">(</span>集合名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 获取文档的内容</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token class-name\">FindIterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span></span> documents <span class=\"token operator\">=</span> collection<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Document</span> document <span class=\"token operator\">:</span> documents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"springboot连接mongodb\"><a class=\"anchor\" href=\"#springboot连接mongodb\">#</a> SpringBoot 连接 MongoDB</h1>\n<h2 id=\"applicationyml\"><a class=\"anchor\" href=\"#applicationyml\">#</a> application.yml</h2>\n<ul>\n<li>不带密码</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">mongodb</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> 数据库</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> IP地址</pre></td></tr></table></figure><ul>\n<li>密码访问</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">mongodb</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> 数据库</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> IP地址</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> 用户名</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> 密码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">authentication-database</span><span class=\"token punctuation\">:</span> 用户名绑定的数据库(admin)</pre></td></tr></table></figure>",
            "tags": [
                "MongoDB"
            ]
        }
    ]
}